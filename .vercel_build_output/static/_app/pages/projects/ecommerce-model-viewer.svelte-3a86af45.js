import{S as ne,i as le,s as ie,v as ce,w as de,x as ue,p as he,n as pe,A as fe,e as d,t as n,j as I,c as u,a as h,g as l,d as a,l as $,b as t,f as p,G as r}from"../../chunks/vendor-6b98a0cd.js";import{P as me}from"../../chunks/ProjectPage-7d60389c.js";function ge(M){let o,b,s,_,E,D,f,G,k,S,z,V,A,B,R,c,F,m,W,q,g,L,N,y,U,J,C,P,K,j,v,O,x,Q,X;return{c(){o=d("h1"),b=n("Resident 3D "),s=d("span"),_=n("&"),E=n(" AR Viewer Prototype"),D=I(),f=d("p"),G=n("In 2021 I developed a proof of concept prototype for "),k=d("a"),S=n("Resident"),z=n(` - A furniture and lighting company. I worked with Resident to improve the way customers can interact\r
		with their products online, using a 3D and AR viewer for products featured online.`),V=I(),A=d("h2"),B=n("Building the Prototype"),R=I(),c=d("p"),F=n("To create the 3D Viewer for the prototype I explored many options, such as "),m=d("a"),W=n("Vectary"),q=n(`\r
		and\r
		`),g=d("a"),L=n("Emersya"),N=n(`. However, I decided to go with Google's\r
		`),y=d("a"),U=n("Model Viewer"),J=n(` library, as it is open source and free to use. Additionally, the library includes features such\r
		as a Web viewer, AR Viewer, Custom Camera settings, light environment settings and so on.`),C=I(),P=d("h2"),K=n("Hosting the 3D Files"),j=I(),v=d("p"),O=n(`To host the many 3D model variants for the furniture and lighting products, I used a cloud\r
		hosting software called `),x=d("a"),Q=n("Cloudinary"),X=n(`. The advantage of using Cloudinary is that the platform can serve the 3D models via a simple\r
		API, and the models can be fetched as images or 3D Model formats. Additionally, the client's can\r
		serve the models to other platforms, making this a versatile intergration.`),this.h()},l(e){o=u(e,"H1",{class:!0});var i=h(o);b=l(i,"Resident 3D "),s=u(i,"SPAN",{class:!0});var Y=h(s);_=l(Y,"&"),Y.forEach(a),E=l(i," AR Viewer Prototype"),i.forEach(a),D=$(e),f=u(e,"P",{class:!0});var H=h(f);G=l(H,"In 2021 I developed a proof of concept prototype for "),k=u(H,"A",{class:!0,href:!0});var Z=h(k);S=l(Z,"Resident"),Z.forEach(a),z=l(H,` - A furniture and lighting company. I worked with Resident to improve the way customers can interact\r
		with their products online, using a 3D and AR viewer for products featured online.`),H.forEach(a),V=$(e),A=u(e,"H2",{class:!0});var ee=h(A);B=l(ee,"Building the Prototype"),ee.forEach(a),R=$(e),c=u(e,"P",{class:!0});var w=h(c);F=l(w,"To create the 3D Viewer for the prototype I explored many options, such as "),m=u(w,"A",{target:!0,rel:!0,class:!0,href:!0});var te=h(m);W=l(te,"Vectary"),te.forEach(a),q=l(w,`\r
		and\r
		`),g=u(w,"A",{target:!0,rel:!0,class:!0,href:!0});var re=h(g);L=l(re,"Emersya"),re.forEach(a),N=l(w,`. However, I decided to go with Google's\r
		`),y=u(w,"A",{target:!0,rel:!0,class:!0,href:!0});var ae=h(y);U=l(ae,"Model Viewer"),ae.forEach(a),J=l(w,` library, as it is open source and free to use. Additionally, the library includes features such\r
		as a Web viewer, AR Viewer, Custom Camera settings, light environment settings and so on.`),w.forEach(a),C=$(e),P=u(e,"H2",{class:!0});var oe=h(P);K=l(oe,"Hosting the 3D Files"),oe.forEach(a),j=$(e),v=u(e,"P",{class:!0});var T=h(v);O=l(T,`To host the many 3D model variants for the furniture and lighting products, I used a cloud\r
		hosting software called `),x=u(T,"A",{target:!0,rel:!0,class:!0,href:!0});var se=h(x);Q=l(se,"Cloudinary"),se.forEach(a),X=l(T,`. The advantage of using Cloudinary is that the platform can serve the 3D models via a simple\r
		API, and the models can be fetched as images or 3D Model formats. Additionally, the client's can\r
		serve the models to other platforms, making this a versatile intergration.`),T.forEach(a),this.h()},h(){t(s,"class","text-primary"),t(o,"class","text-3xl sm:text-4xl lg:text-5xl xl:text-7xl lg:mt-8 font-bold text-background-secondary mb-6 lg:mb-12"),t(k,"class","text-background-secondary hover:text-background-secondary-active"),t(k,"href","https://resident.co.nz/"),t(f,"class","leading-relaxed text-lg mb-4 lg:mb-8"),t(A,"class","text-primary font-bold text-2xl lg:text-3xl pb-4"),t(m,"target","_blank"),t(m,"rel","noopener noreferrer"),t(m,"class","text-background-secondary hover:text-background-secondary-active"),t(m,"href","https://vectary.com"),t(g,"target","_blank"),t(g,"rel","noopener noreferrer"),t(g,"class","text-background-secondary hover:text-background-secondary-active"),t(g,"href","https://emersya.com/en/home"),t(y,"target","_blank"),t(y,"rel","noopener noreferrer"),t(y,"class","text-background-secondary hover:text-background-secondary-active"),t(y,"href","https://modelviewer.dev/"),t(c,"class","leading-relaxed text-lg mb-4 lg:mb-8"),t(P,"class","text-primary font-bold text-2xl lg:text-3xl pb-4"),t(x,"target","_blank"),t(x,"rel","noopener noreferrer"),t(x,"class","text-background-secondary hover:text-background-secondary-active"),t(x,"href","https://cloudinary.com/"),t(v,"class","leading-relaxed text-lg mb-4 lg:mb-8")},m(e,i){p(e,o,i),r(o,b),r(o,s),r(s,_),r(o,E),p(e,D,i),p(e,f,i),r(f,G),r(f,k),r(k,S),r(f,z),p(e,V,i),p(e,A,i),r(A,B),p(e,R,i),p(e,c,i),r(c,F),r(c,m),r(m,W),r(c,q),r(c,g),r(g,L),r(c,N),r(c,y),r(y,U),r(c,J),p(e,C,i),p(e,P,i),r(P,K),p(e,j,i),p(e,v,i),r(v,O),r(v,x),r(x,Q),r(v,X)},d(e){e&&a(o),e&&a(D),e&&a(f),e&&a(V),e&&a(A),e&&a(R),e&&a(c),e&&a(C),e&&a(P),e&&a(j),e&&a(v)}}}function ye(M){let o,b;return o=new me({props:{headerImageUrl:"/Model-Viewer/ModelViewerPrototype.png",projectLink:"https://determined-mirzakhani-828e94.netlify.app/",linkText:"View the Prototype",$$slots:{default:[ge]},$$scope:{ctx:M}}}),{c(){ce(o.$$.fragment)},l(s){de(o.$$.fragment,s)},m(s,_){ue(o,s,_),b=!0},p(s,[_]){const E={};_&1&&(E.$$scope={dirty:_,ctx:s}),o.$set(E)},i(s){b||(he(o.$$.fragment,s),b=!0)},o(s){pe(o.$$.fragment,s),b=!1},d(s){fe(o,s)}}}class be extends ne{constructor(o){super();le(this,o,null,ye,ie,{})}}export{be as default};
